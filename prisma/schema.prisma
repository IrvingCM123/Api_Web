generator client {
  provider = "prisma-client-js"
}

// Configuración de la fuente de datos, PostgreSQL y URL de la base de datos desde las variables de entorno
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Definición del modelo User
model User {
  // Campo de identificación autoincremental
  ID_Usuario Int @id @default(autoincrement())
  // Campo para la URL de la imagen, opcional
  url_imagen String? @db.VarChar(255)
  // Campo para el nombre de usuario
  Nombre_Usuario String @db.VarChar(30)
  // Campo para el apellido de usuario
  ApellidoP_Usuario String @db.VarChar(20)
  // Campo para el apellido de usuario
  ApellidoM_Usuario String @db.VarChar(20)
  // Campo para el correo de usuario, único
  Correo_Usuario String @unique @db.VarChar(30)
  // Campo para la contraseña de usuario
  Contrasena_Usuario String @db.VarChar(30)
  // Relación con el modelo GestionUsuario
  gestion_usuarios GestionUsuario[]

  // Agrega la relación inversa para historial_prestamo
  historial_prestamo HistorialPrestamo[]
  // Agrega la relación inversa para prestamos
  prestamos PrestamoDevolucion[]
}

model GestionUsuario {
  // Campo de identificación
  ID_Usuario   Int       @id
  // Relación con el modelo User
  User         User      @relation(fields: [ID_Usuario], references: [ID_Usuario])
  // Campo booleano para Candidato_Prestamo
  Candidato_Prestamo Boolean
  // Campo para la Fecha de Registro
  Fecha_Registro String   @db.VarChar(20)
  // Campo para contar cuántos préstamos tiene pendientes el usuario
  Prestamos_Pendientes Int
  // Campo para contar cuántas devoluciones ha hecho el usuario
  Devoluciones_Realizadas Int
  // Relación con el modelo HistorialPrestamo
  historial_prestamo HistorialPrestamo[]
}


// Definición del modelo Libro
model Libro {
  // Campo de identificación para el ISBN
  ISBN   String   @id @db.VarChar(20)
  // Relación con el modelo Inventario
  inventario Inventario[]
  // Relación con el modelo PrestamoDevolucion
  prestamos PrestamoDevolucion[] // Agrega esta relación inversa

}

// Definición del modelo Revista
model Revista {
  // Campo de identificación para el ISSN
  ISSN   String   @id @db.VarChar(20)
  // Relación con el modelo Inventario
  inventario Inventario[]
  // Relación con el modelo PrestamoDevolucion
  prestamos PrestamoDevolucion[] // Agrega esta relación inversa
}

// Definición del modelo PrestamoDevolucion
model PrestamoDevolucion {
  // Campo de identificación autoincremental
  ID_Prestamo Int @id @default(autoincrement())
  // Campo para el ISBN, opcional
  ISBN String? @db.VarChar(20)
  // Campo para el ISSN, opcional
  ISSN String? @db.VarChar(20)
  // Campo para el ID usuario 
  ID_Usuario Int
  // Relación con el modelo Revista
  revista Revista? @relation(fields: [ISSN], references: [ISSN])
  // Relación con el modelo Libro
  libro Libro? @relation(fields: [ISBN], references: [ISBN])
  // Relación con el modelo User
  User User @relation(fields: [ID_Usuario], references: [ID_Usuario])
  // Campo para el estado (booleano)
  Status Boolean
  // Campo para la Fecha de Prestamo
  Fecha_prestamo String @db.VarChar(20)
  // Campo para la Fecha de Devolución
  Fecha_devolucion String @db.VarChar(20)

  // Agrega la relación inversa para historial_prestamo
  historial_prestamo HistorialPrestamo[]
}


// Definición del modelo Inventario
model Inventario {
  // Campo de identificación autoincremental
  ID_Articulo   Int       @id @default(autoincrement())
  // Campo para el ISBN, opcional
  ISBN   String?   @db.VarChar(20)
  // Campo para el ISSN, opcional
  ISSN   String?   @db.VarChar(20)
  // Relación con el modelo Revista
  revista Revista? @relation(fields: [ISSN], references: [ISSN])
  // Relación con el modelo Libro
  libro Libro? @relation(fields: [ISBN], references: [ISBN])
  // Campo para la Sección de Biblioteca
  Seccion_Biblioteca String @db.VarChar(10)
  // Campo para el Número de Copias
  Numero_Copias Int @db.Integer
  // Campo para el Número de Copias Disponibles
  Copias_Disponibles Int @db.Integer
  // Campo para el Número de Copias Disponibles Mínimas
  Copias_Disponibles_minimas Int @db.Integer
}

// Definición del modelo HistorialPrestamo
model HistorialPrestamo {
  // Campo de identificación autoincremental
  ID_Historial Int @id @default(autoincrement())
  // Campo para el ID de Usuario
  ID_Usuario Int
  // Relación con el modelo User
  User User @relation(fields: [ID_Usuario], references: [ID_Usuario])
  // Campo para el ID de Prestamo
  ID_Prestamo Int
  // Relación con el modelo PrestamoDevolucion
  PrestamoDevolucion PrestamoDevolucion @relation(fields: [ID_Prestamo], references: [ID_Prestamo])
  // Campo para la Fecha de Prestamo
  Fecha_Prestamo String @db.VarChar(20)
  // Campo para indicar si el préstamo está pendiente
  Pendiente Boolean
  
  // Relación inversa con gestion usuario
  gestion_usuarios GestionUsuario[]
}

model CatalogoClasificacion {
  id_catalogo_clasificacion Int @id @default(autoincrement())
  nombre_catalogo_clasificacion String @db.VarChar(30)
}

model CatalogoEditorial {
  id_catalogo_editorial Int @id @default(autoincrement())
  nombre_catalogo_editorial String @db.VarChar(30)
}

model CatalogoSeccionBiblioteca {
  id_catalogo_seccion_biblioteca Int @id @default(autoincrement())
  nombre_catalogo_seccion_biblioteca String @db.VarChar(30)
}

model CatalogoGenero {
  id_catalogo_genero Int @id @default(autoincrement())
  nombre_catalogo_genero String @db.VarChar(30)
}

